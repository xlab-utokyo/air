class DeviceList{constructor(){this.init()}init(){$("#top .status").empty();for(const{label:t,room:e,key:n,network:o}of Object.values(DEVICES)){const n=document.createElement("button");n.classList.add("off","btn-long"),n.id=e;const o=document.createElement("span");o.textContent=t,n.appendChild(o);const s=document.createElement("p");s.textContent="CLOSED",n.appendChild(s);const c=document.createElement("li");c.appendChild(n),$("#top .status")[0].appendChild(c)}this.start()}async start(){let t={};try{const e=await fetch("/air/device-statuses.json");t=await e.json()}catch(t){console.error(t)}for(const[e,{room:n,key:o,network:s}]of Object.entries(DEVICES))!1!==t[e]&&this.observe(n,o,s)}async observe(t,e,n){(await this.connectPeer(e)).joinRoom(t,{mode:n}).on("data",({data:e})=>{if(void 0===e.currentUser)return;const n=document.getElementById(t),o=n.querySelector("p"),{currentUser:s}=e;null===s?(n.classList.remove("off"),o.textContent="PLAY"):(n.classList.add("off"),o.textContent="BUSY")})}connectPeer(t){return new Promise(e=>{const n=new Peer({key:t});n.on("open",()=>e(n))})}}document.addEventListener("DOMContentLoaded",()=>new DeviceList);